$date
	Wed Feb  5 21:31:23 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module lnTop_tb $end
$var wire 18 ! rBus [17:0] $end
$var wire 1 " done $end
$var reg 1 # clk $end
$var reg 1 $ rst $end
$var reg 1 % start $end
$var reg 16 & xBus [15:0] $end
$scope module dut $end
$var wire 1 # clk $end
$var wire 18 ' rBus [17:0] $end
$var wire 1 $ rst $end
$var wire 1 % start $end
$var wire 16 ( xBus [15:0] $end
$var wire 1 ) selXorI $end
$var wire 1 * ln_result $end
$var wire 1 + ldX $end
$var wire 1 , ldT $end
$var wire 1 - ldLn $end
$var wire 1 . initT1 $end
$var wire 1 / initLn0 $end
$var wire 1 0 init0 $end
$var wire 1 " done $end
$var wire 1 1 cntUp $end
$var wire 1 2 cnt8 $end
$scope module controller $end
$var wire 1 # clk $end
$var wire 1 $ rst $end
$var wire 1 % start $end
$var wire 1 2 cnt8 $end
$var parameter 3 3 DONE $end
$var parameter 3 4 IDLE $end
$var parameter 3 5 INIT $end
$var parameter 3 6 ITERATE1 $end
$var parameter 3 7 ITERATE2 $end
$var parameter 3 8 LN $end
$var reg 1 1 cntUp $end
$var reg 1 " done $end
$var reg 1 0 init0 $end
$var reg 1 / initExp1 $end
$var reg 1 . initT1 $end
$var reg 1 - ldLN $end
$var reg 1 , ldT $end
$var reg 1 + ldX $end
$var reg 3 9 next [2:0] $end
$var reg 1 ) selXorI $end
$var reg 3 : state [2:0] $end
$upscope $end
$scope module datapath $end
$var wire 1 # clk $end
$var wire 1 1 cntUp $end
$var wire 1 0 init0 $end
$var wire 1 / initLn0 $end
$var wire 1 . initT1 $end
$var wire 1 - ldLn $end
$var wire 1 , ldT $end
$var wire 1 + ldX $end
$var wire 16 ; muxOut [15:0] $end
$var wire 18 < rBus [17:0] $end
$var wire 1 $ rst $end
$var wire 1 ) selXorI $end
$var wire 1 = signToggle $end
$var wire 16 > xBus [15:0] $end
$var wire 16 ? xOut [15:0] $end
$var wire 16 @ tOut [15:0] $end
$var wire 32 A multResult [31:0] $end
$var wire 16 B multOut [15:0] $end
$var wire 16 C lutOut [15:0] $end
$var wire 18 D lnOut [17:0] $end
$var wire 19 E fullAdd [18:0] $end
$var wire 3 F cntOut [2:0] $end
$var wire 1 2 cnt8 $end
$var wire 18 G addOut [17:0] $end
$scope module cntr $end
$var wire 1 # clk $end
$var wire 1 1 cntUp $end
$var wire 1 0 init0 $end
$var wire 1 $ rst $end
$var parameter 32 H m $end
$var reg 3 I cnt [2:0] $end
$upscope $end
$scope module lnReg $end
$var wire 1 # clk $end
$var wire 18 J in [17:0] $end
$var wire 1 / init $end
$var wire 1 - load $end
$var wire 1 $ rst $end
$var parameter 18 K INIT_VALUE $end
$var parameter 32 L n $end
$var reg 18 M out [17:0] $end
$upscope $end
$scope module lut $end
$var wire 3 N addr [2:0] $end
$var wire 16 O out [15:0] $end
$var reg 16 P dataOut [15:0] $end
$upscope $end
$scope module tReg $end
$var wire 1 # clk $end
$var wire 16 Q in [15:0] $end
$var wire 1 . init $end
$var wire 1 , load $end
$var wire 1 $ rst $end
$var parameter 16 R INIT_VALUE $end
$var parameter 32 S n $end
$var reg 16 T out [15:0] $end
$upscope $end
$scope module xReg $end
$var wire 1 # clk $end
$var wire 16 U in [15:0] $end
$var wire 1 V init $end
$var wire 1 + load $end
$var wire 1 $ rst $end
$var parameter 16 W INIT_VALUE $end
$var parameter 32 X n $end
$var reg 16 Y out [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10000 X
b0 W
b10000 S
b0 R
b10010 L
b0 K
b11 H
b100 8
b11 7
b10 6
b1 5
b0 4
b101 3
$end
#30000
$dumpvars
b0 Y
0V
b0z U
b0 T
b0 Q
b0 P
b0 O
b0 N
b0 M
b0 J
b0 I
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0z >
0=
b0 <
b0 ;
b1 :
b10 9
02
01
10
1/
1.
0-
0,
1+
0*
0)
b100000000000000 (
bz '
b100000000000000 &
0%
0$
0#
0"
bz !
$end
#35000
bx B
bx Q
bx A
b0z ;
b11 9
1,
1)
00
0/
0.
0+
b0z ?
b0z Y
b10 :
1#
#40000
0#
#45000
bx G
bx J
b0 ;
b100 9
0)
1,
bx E
b11 :
bx @
bx T
1#
#50000
0#
#55000
b10 9
11
1-
0,
b100 :
1#
#60000
0#
#65000
b0z ;
1=
b11 9
1,
1)
01
0-
x*
b1000000000000000 C
b1000000000000000 O
b1000000000000000 P
b10 :
bx <
bx D
bx M
b1 F
b1 I
b1 N
1#
#70000
0#
#75000
b1000000000000000 ;
b100 9
0)
1,
b11 :
1#
#80000
0#
#85000
b10 9
11
1-
0,
b100 :
1#
#90000
0#
#95000
0=
b0z ;
b101010101010101 C
b101010101010101 O
b101010101010101 P
b11 9
1,
1)
01
0-
b10 F
b10 I
b10 N
b10 :
1#
#100000
0#
#105000
b101010101010101 ;
b100 9
0)
1,
b11 :
1#
#110000
0#
#115000
b10 9
11
1-
0,
b100 :
1#
#120000
0#
#125000
b0z ;
1=
b11 9
1,
1)
01
0-
b100000000000000 C
b100000000000000 O
b100000000000000 P
b10 :
b11 F
b11 I
b11 N
1#
#130000
0#
#135000
b100000000000000 ;
b100 9
0)
1,
b11 :
1#
#140000
0#
#145000
b10 9
11
1-
0,
b100 :
1#
#150000
0#
#155000
0=
b0z ;
b11001100110011 C
b11001100110011 O
b11001100110011 P
b11 9
1,
1)
01
0-
b100 F
b100 I
b100 N
b10 :
1#
#160000
0#
#165000
b11001100110011 ;
b100 9
0)
1,
b11 :
1#
#170000
0#
#175000
b10 9
11
1-
0,
b100 :
1#
#180000
0#
#185000
b0z ;
1=
b11 9
1,
1)
01
0-
b10101010101010 C
b10101010101010 O
b10101010101010 P
b10 :
b101 F
b101 I
b101 N
1#
#190000
0#
#195000
b10101010101010 ;
b100 9
0)
1,
b11 :
1#
#200000
0#
#205000
b10 9
11
1-
0,
b100 :
1#
#210000
0#
#215000
0=
b0z ;
b10010010010010 C
b10010010010010 O
b10010010010010 P
b11 9
1,
1)
01
0-
b110 F
b110 I
b110 N
b10 :
1#
#220000
0#
#225000
b10010010010010 ;
b100 9
0)
1,
b11 :
1#
#230000
0#
#235000
b10 9
11
1-
0,
b100 :
1#
#240000
0#
#245000
b0z ;
1=
b10000000000000 C
b10000000000000 O
b10000000000000 P
b11 9
1,
1)
01
0-
b10 :
12
b111 F
b111 I
b111 N
1#
#250000
0#
#255000
b10000000000000 ;
b100 9
0)
1,
b11 :
1#
#260000
0#
#265000
b101 9
11
1-
0,
b100 :
1#
#270000
0#
#275000
b0 ;
0=
b0 C
b0 O
b0 P
b0 9
1"
01
0-
02
b0 F
b0 I
b0 N
b101 :
1#
#280000
0#
#285000
0"
b0 :
1#
#290000
0#
#295000
1#
