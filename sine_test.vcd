$date
	Wed Feb  5 20:33:54 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module sineTop_tb $end
$var wire 18 ! rBus [17:0] $end
$var wire 1 " done $end
$var reg 1 # clk $end
$var reg 1 $ rst $end
$var reg 1 % start $end
$var reg 16 & xBus [15:0] $end
$scope module dut $end
$var wire 1 # clk $end
$var wire 1 $ rst $end
$var wire 1 % start $end
$var wire 16 ' xBus [15:0] $end
$var wire 1 ( sub $end
$var wire 1 ) selXorI $end
$var wire 18 * rBus [17:0] $end
$var wire 1 + ldX $end
$var wire 1 , ldT $end
$var wire 1 - ldSine $end
$var wire 1 . initTsel $end
$var wire 1 / initSsel $end
$var wire 1 0 init0 $end
$var wire 1 " done $end
$var wire 1 1 cntUp $end
$var wire 1 2 cnt8 $end
$scope module sineControl $end
$var wire 1 # clk $end
$var wire 1 $ rst $end
$var wire 1 % start $end
$var wire 1 2 cnt8 $end
$var parameter 3 3 DONE $end
$var parameter 3 4 IDLE $end
$var parameter 3 5 INIT $end
$var parameter 3 6 ITERATE1 $end
$var parameter 3 7 ITERATE2 $end
$var parameter 3 8 SINE $end
$var reg 1 1 cntUp $end
$var reg 1 " done $end
$var reg 1 0 init0 $end
$var reg 1 / initSsel $end
$var reg 1 . initTsel $end
$var reg 1 - ldSine $end
$var reg 1 , ldT $end
$var reg 1 + ldX $end
$var reg 3 9 next [2:0] $end
$var reg 1 ) selXorI $end
$var reg 1 : sign $end
$var reg 3 ; state [2:0] $end
$var reg 1 ( sub $end
$upscope $end
$scope module sineDataPath $end
$var wire 1 # clk $end
$var wire 1 1 cntUp $end
$var wire 1 0 init0 $end
$var wire 1 / initSsel $end
$var wire 1 . initTsel $end
$var wire 1 - ldSine $end
$var wire 1 , ldT $end
$var wire 1 + ldX $end
$var wire 18 < rBus [17:0] $end
$var wire 1 $ rst $end
$var wire 18 = sSineOut [17:0] $end
$var wire 1 ) selXorI $end
$var wire 1 ( sub $end
$var wire 16 > xBus [15:0] $end
$var wire 32 ? xSq_full [31:0] $end
$var wire 16 @ xSq [15:0] $end
$var wire 16 A xOut [15:0] $end
$var wire 18 B termExtended [17:0] $end
$var wire 16 C t_in [15:0] $end
$var wire 16 D tOut [15:0] $end
$var wire 18 E sine_in [17:0] $end
$var wire 18 F sineOut [17:0] $end
$var wire 16 G muxOut [15:0] $end
$var wire 32 H multResult [31:0] $end
$var wire 16 I multOut [15:0] $end
$var wire 16 J lutOut [15:0] $end
$var wire 19 K fullAdd [18:0] $end
$var wire 3 L cntOut [2:0] $end
$var wire 1 2 cnt8 $end
$var wire 18 M addOut [17:0] $end
$scope module cntr $end
$var wire 1 # clk $end
$var wire 1 1 cntUp $end
$var wire 1 0 init0 $end
$var wire 1 $ rst $end
$var parameter 32 N m $end
$var reg 3 O cnt [2:0] $end
$upscope $end
$scope module lut $end
$var wire 3 P addr [2:0] $end
$var wire 16 Q out [15:0] $end
$var reg 16 R dataOut [15:0] $end
$upscope $end
$scope module sineReg $end
$var wire 1 # clk $end
$var wire 18 S in [17:0] $end
$var wire 1 T init $end
$var wire 1 - load $end
$var wire 1 $ rst $end
$var parameter 18 U INIT_VALUE $end
$var parameter 32 V n $end
$var reg 18 W out [17:0] $end
$upscope $end
$scope module tReg $end
$var wire 1 # clk $end
$var wire 16 X in [15:0] $end
$var wire 1 Y init $end
$var wire 1 , load $end
$var wire 1 $ rst $end
$var parameter 16 Z INIT_VALUE $end
$var parameter 32 [ n $end
$var reg 16 \ out [15:0] $end
$upscope $end
$scope module xReg $end
$var wire 1 # clk $end
$var wire 16 ] in [15:0] $end
$var wire 1 ^ init $end
$var wire 1 + load $end
$var wire 1 $ rst $end
$var parameter 16 _ INIT_VALUE $end
$var parameter 32 ` n $end
$var reg 16 a out [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10000 `
b0 _
b10000 [
b0 Z
b10010 V
b0 U
b11 N
b100 8
b11 7
b10 6
b1 5
b0 4
b101 3
$end
#0
$dumpvars
b0 a
0^
b1000000000000 ]
b0 \
0Y
b0 X
b0 W
0T
b0 S
b10101010101010 R
b10101010101010 Q
b0 P
b0 O
b0 M
b0 L
b0 K
b10101010101010 J
b0 I
b0 H
b10101010101010 G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b100000000 @
b1000000000000000000000000 ?
b1000000000000 >
b0 =
b0 <
b0 ;
1:
b0 9
02
01
00
0/
0.
0-
0,
0+
b0 *
0)
0(
b1000000000000 '
b1000000000000 &
0%
1$
0#
0"
b0 !
$end
#5000
1#
#10000
0#
0$
#15000
1#
#20000
b1 9
0#
1%
#25000
b10 9
10
1/
1.
1-
1,
1+
b1 ;
1#
#30000
1-
10
1/
1.
1,
1+
b10 9
0#
0%
#35000
b100000000 G
b11 9
1)
0-
00
0/
0.
1,
0+
b0 E
b0 S
b0 C
b0 X
b10 ;
b1000000000000 A
b1000000000000 a
1#
#40000
0#
#45000
b10101010101010 G
b100 9
0)
1,
b11 ;
1#
#50000
0#
#55000
b10 9
1(
11
1-
0,
b100 ;
1#
#60000
0#
#65000
b100000000 G
b1000100010 J
b1000100010 Q
b1000100010 R
b11 9
1,
1)
0(
01
0-
b1 L
b1 O
b1 P
0:
b10 ;
1#
#70000
0#
#75000
b1000100010 G
b100 9
0)
1,
b11 ;
1#
#80000
0#
#85000
b10 9
11
1-
0,
b100 ;
1#
#90000
0#
#95000
b100000000 G
b11 9
1,
1)
01
0-
b1101 J
b1101 Q
b1101 R
1:
b10 ;
b10 L
b10 O
b10 P
1#
#100000
0#
#105000
b1101 G
b100 9
0)
1,
b11 ;
1#
#110000
0#
#115000
b10 9
1(
11
1-
0,
b100 ;
1#
#120000
0#
#125000
b100000000 G
b0 J
b0 Q
b0 R
b11 9
1,
1)
0(
01
0-
b11 L
b11 O
b11 P
0:
b10 ;
1#
#130000
0#
#135000
b0 G
b100 9
0)
1,
b11 ;
1#
#140000
0#
#145000
b10 9
11
1-
0,
b100 ;
1#
#150000
0#
#155000
b100000000 G
b11 9
1,
1)
01
0-
1:
b10 ;
b100 L
b100 O
b100 P
1#
#160000
0#
#165000
b0 G
b100 9
0)
1,
b11 ;
1#
#170000
0#
#175000
b10 9
1(
11
1-
0,
b100 ;
1#
#180000
0#
#185000
b100000000 G
b11 9
1,
1)
0(
01
0-
b101 L
b101 O
b101 P
0:
b10 ;
1#
#190000
0#
#195000
b0 G
b100 9
0)
1,
b11 ;
1#
#200000
0#
#205000
b10 9
11
1-
0,
b100 ;
1#
#210000
0#
#215000
b100000000 G
b11 9
1,
1)
01
0-
1:
b10 ;
b110 L
b110 O
b110 P
1#
#220000
0#
#225000
b0 G
b100 9
0)
1,
b11 ;
1#
#230000
0#
#235000
b10 9
1(
11
1-
0,
b100 ;
1#
#240000
0#
#245000
b100000000 G
b11 9
1,
1)
0(
01
0-
12
b111 L
b111 O
b111 P
0:
b10 ;
1#
#250000
0#
#255000
b0 G
b100 9
0)
1,
b11 ;
1#
#260000
0#
#265000
b101 9
11
1-
0,
b100 ;
1#
#270000
0#
#275000
b10101010101010 G
b10101010101010 J
b10101010101010 Q
b10101010101010 R
b0 9
1"
01
0-
1:
b101 ;
02
b0 L
b0 O
b0 P
1#
#280000
0#
#285000
0"
b0 ;
1#
#290000
0#
#295000
1#
